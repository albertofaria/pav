"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc.aio  # type: ignore
import pav.csi.spec.csi_pb2

class IdentityStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetPluginInfo: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.GetPluginInfoRequest,
        pav.csi.spec.csi_pb2.GetPluginInfoResponse] = ...

    GetPluginCapabilities: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.GetPluginCapabilitiesRequest,
        pav.csi.spec.csi_pb2.GetPluginCapabilitiesResponse] = ...

    Probe: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.ProbeRequest,
        pav.csi.spec.csi_pb2.ProbeResponse] = ...


class IdentityServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    async def GetPluginInfo(self,
        request: pav.csi.spec.csi_pb2.GetPluginInfoRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.GetPluginInfoResponse: ...

    @abc.abstractmethod
    async def GetPluginCapabilities(self,
        request: pav.csi.spec.csi_pb2.GetPluginCapabilitiesRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.GetPluginCapabilitiesResponse: ...

    @abc.abstractmethod
    async def Probe(self,
        request: pav.csi.spec.csi_pb2.ProbeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.ProbeResponse: ...


def add_IdentityServicer_to_server(servicer: IdentityServicer, server: grpc.Server) -> None: ...

class ControllerStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    CreateVolume: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.CreateVolumeRequest,
        pav.csi.spec.csi_pb2.CreateVolumeResponse] = ...

    DeleteVolume: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.DeleteVolumeRequest,
        pav.csi.spec.csi_pb2.DeleteVolumeResponse] = ...

    ControllerPublishVolume: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.ControllerPublishVolumeRequest,
        pav.csi.spec.csi_pb2.ControllerPublishVolumeResponse] = ...

    ControllerUnpublishVolume: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.ControllerUnpublishVolumeRequest,
        pav.csi.spec.csi_pb2.ControllerUnpublishVolumeResponse] = ...

    ValidateVolumeCapabilities: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.ValidateVolumeCapabilitiesRequest,
        pav.csi.spec.csi_pb2.ValidateVolumeCapabilitiesResponse] = ...

    ListVolumes: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.ListVolumesRequest,
        pav.csi.spec.csi_pb2.ListVolumesResponse] = ...

    GetCapacity: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.GetCapacityRequest,
        pav.csi.spec.csi_pb2.GetCapacityResponse] = ...

    ControllerGetCapabilities: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.ControllerGetCapabilitiesRequest,
        pav.csi.spec.csi_pb2.ControllerGetCapabilitiesResponse] = ...

    CreateSnapshot: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.CreateSnapshotRequest,
        pav.csi.spec.csi_pb2.CreateSnapshotResponse] = ...

    DeleteSnapshot: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.DeleteSnapshotRequest,
        pav.csi.spec.csi_pb2.DeleteSnapshotResponse] = ...

    ListSnapshots: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.ListSnapshotsRequest,
        pav.csi.spec.csi_pb2.ListSnapshotsResponse] = ...

    ControllerExpandVolume: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.ControllerExpandVolumeRequest,
        pav.csi.spec.csi_pb2.ControllerExpandVolumeResponse] = ...

    ControllerGetVolume: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.ControllerGetVolumeRequest,
        pav.csi.spec.csi_pb2.ControllerGetVolumeResponse] = ...


class ControllerServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    async def CreateVolume(self,
        request: pav.csi.spec.csi_pb2.CreateVolumeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.CreateVolumeResponse: ...

    @abc.abstractmethod
    async def DeleteVolume(self,
        request: pav.csi.spec.csi_pb2.DeleteVolumeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.DeleteVolumeResponse: ...

    @abc.abstractmethod
    async def ControllerPublishVolume(self,
        request: pav.csi.spec.csi_pb2.ControllerPublishVolumeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.ControllerPublishVolumeResponse: ...

    @abc.abstractmethod
    async def ControllerUnpublishVolume(self,
        request: pav.csi.spec.csi_pb2.ControllerUnpublishVolumeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.ControllerUnpublishVolumeResponse: ...

    @abc.abstractmethod
    async def ValidateVolumeCapabilities(self,
        request: pav.csi.spec.csi_pb2.ValidateVolumeCapabilitiesRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.ValidateVolumeCapabilitiesResponse: ...

    @abc.abstractmethod
    async def ListVolumes(self,
        request: pav.csi.spec.csi_pb2.ListVolumesRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.ListVolumesResponse: ...

    @abc.abstractmethod
    async def GetCapacity(self,
        request: pav.csi.spec.csi_pb2.GetCapacityRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.GetCapacityResponse: ...

    @abc.abstractmethod
    async def ControllerGetCapabilities(self,
        request: pav.csi.spec.csi_pb2.ControllerGetCapabilitiesRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.ControllerGetCapabilitiesResponse: ...

    @abc.abstractmethod
    async def CreateSnapshot(self,
        request: pav.csi.spec.csi_pb2.CreateSnapshotRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.CreateSnapshotResponse: ...

    @abc.abstractmethod
    async def DeleteSnapshot(self,
        request: pav.csi.spec.csi_pb2.DeleteSnapshotRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.DeleteSnapshotResponse: ...

    @abc.abstractmethod
    async def ListSnapshots(self,
        request: pav.csi.spec.csi_pb2.ListSnapshotsRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.ListSnapshotsResponse: ...

    @abc.abstractmethod
    async def ControllerExpandVolume(self,
        request: pav.csi.spec.csi_pb2.ControllerExpandVolumeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.ControllerExpandVolumeResponse: ...

    @abc.abstractmethod
    async def ControllerGetVolume(self,
        request: pav.csi.spec.csi_pb2.ControllerGetVolumeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.ControllerGetVolumeResponse: ...


def add_ControllerServicer_to_server(servicer: ControllerServicer, server: grpc.Server) -> None: ...

class NodeStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    NodeStageVolume: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.NodeStageVolumeRequest,
        pav.csi.spec.csi_pb2.NodeStageVolumeResponse] = ...

    NodeUnstageVolume: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.NodeUnstageVolumeRequest,
        pav.csi.spec.csi_pb2.NodeUnstageVolumeResponse] = ...

    NodePublishVolume: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.NodePublishVolumeRequest,
        pav.csi.spec.csi_pb2.NodePublishVolumeResponse] = ...

    NodeUnpublishVolume: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.NodeUnpublishVolumeRequest,
        pav.csi.spec.csi_pb2.NodeUnpublishVolumeResponse] = ...

    NodeGetVolumeStats: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.NodeGetVolumeStatsRequest,
        pav.csi.spec.csi_pb2.NodeGetVolumeStatsResponse] = ...

    NodeExpandVolume: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.NodeExpandVolumeRequest,
        pav.csi.spec.csi_pb2.NodeExpandVolumeResponse] = ...

    NodeGetCapabilities: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.NodeGetCapabilitiesRequest,
        pav.csi.spec.csi_pb2.NodeGetCapabilitiesResponse] = ...

    NodeGetInfo: grpc.UnaryUnaryMultiCallable[
        pav.csi.spec.csi_pb2.NodeGetInfoRequest,
        pav.csi.spec.csi_pb2.NodeGetInfoResponse] = ...


class NodeServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    async def NodeStageVolume(self,
        request: pav.csi.spec.csi_pb2.NodeStageVolumeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.NodeStageVolumeResponse: ...

    @abc.abstractmethod
    async def NodeUnstageVolume(self,
        request: pav.csi.spec.csi_pb2.NodeUnstageVolumeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.NodeUnstageVolumeResponse: ...

    @abc.abstractmethod
    async def NodePublishVolume(self,
        request: pav.csi.spec.csi_pb2.NodePublishVolumeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.NodePublishVolumeResponse: ...

    @abc.abstractmethod
    async def NodeUnpublishVolume(self,
        request: pav.csi.spec.csi_pb2.NodeUnpublishVolumeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.NodeUnpublishVolumeResponse: ...

    @abc.abstractmethod
    async def NodeGetVolumeStats(self,
        request: pav.csi.spec.csi_pb2.NodeGetVolumeStatsRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.NodeGetVolumeStatsResponse: ...

    @abc.abstractmethod
    async def NodeExpandVolume(self,
        request: pav.csi.spec.csi_pb2.NodeExpandVolumeRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.NodeExpandVolumeResponse: ...

    @abc.abstractmethod
    async def NodeGetCapabilities(self,
        request: pav.csi.spec.csi_pb2.NodeGetCapabilitiesRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.NodeGetCapabilitiesResponse: ...

    @abc.abstractmethod
    async def NodeGetInfo(self,
        request: pav.csi.spec.csi_pb2.NodeGetInfoRequest,
        context: grpc.aio.ServicerContext,
    ) -> pav.csi.spec.csi_pb2.NodeGetInfoResponse: ...


def add_NodeServicer_to_server(servicer: NodeServicer, server: grpc.Server) -> None: ...
